package com.example.demo;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;

import com.example.demo.model.AliquotaIva;
import com.example.demo.model.OrdineAcquisto;

public class OrdineTest {
	
	
	@Autowired
	OrdineAcquisto ordine;
	
	
	@BeforeAll
	public static void init() {
		System.out.println("before all started");
	}
	
	@BeforeEach
	public void init1() {
		System.out.println("before each started");
	}
	
	@AfterEach
	public void init2() {
		System.out.println("after each started");
	}
	
	
	@AfterAll
  public static void init3() {
		System.out.println("after all");
	}
	
	
	
	//Flusso di controllo è:
	/*
	 * before all
	 * 
	 * before each 
	 * metodo 2
	 * after each
	 * 
	 * before each 
	 * metodo 2
	 * after each
	 * 
	 * after all
	 * 
	 * 
	 * 
	 * 
	 * 
	 * */
	
	@Test
	public void nuovaOrdine() {
		System.out.println("nuovaAliquota");
		ordine.setImporto(2);
		ordine.getOfornitore().setCitta("teramo");
		List<OrdineAcquisto> ordini = new ArrayList<>();
		ordini.add(ordine);
		assertNotNull(ordini);
		assertEquals(2, ordini.get(0).getImporto());
		assertEquals("teramo", ordini.get(0).getOfornitore().getCitta());
		
		//assertTrue controlla se un booleano è true assertFalse il contrario

	}
	
//	
//	@Test
//	public void exceptionControl() {
//		System.out.println("exceptionControl");
//		ordine.setData("prova");
////		assertThrows();
//	}

}
