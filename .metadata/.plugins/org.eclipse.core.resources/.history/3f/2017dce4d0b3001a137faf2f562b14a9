package com.example.demo.controller;

import java.text.ParseException;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.example.demo.model.AnnoContabile;
import com.example.demo.model.FormRiconciliazione;
import com.example.demo.model.OrdineDiAcquistoDettaglio;
import com.example.demo.model.SottoCategoria;
import com.example.demo.service.OrdineAcquistoDettaglioService;
import com.example.demo.service.SottoCategoriaService;

@Controller
@RequestMapping(value = "Budget")
public class BudgetController {
	
	@Autowired
	SottoCategoriaService sotser;
	
	@Autowired
	OrdineAcquistoDettaglioService detser;
	
	@Autowired
	SottoCategoria sotcat;
	
	@RequestMapping(value = "/Lista", method = RequestMethod.GET)
	public ModelAndView list() {
		ModelAndView model = new ModelAndView("Menu/Budget");
		return model;
	}
	
	@GetMapping(value = "/Riconciliazione")
	public ModelAndView riconciliazione() {
		ModelAndView model = new ModelAndView("Budget/Riconciliazione");
		model.addObject("elencoSottoCategorie", sotser.getAllSottoCategorie());
		return model;
	}

	@PostMapping(value = "/saveRiconciliazione")
	public ModelAndView saveRiconciliazione(@Valid @ModelAttribute("oggettoForm") FormRiconciliazione form, HttpSession sessionObj) {
		ModelAndView model = new ModelAndView();
		AnnoContabile oanno = (AnnoContabile) sessionObj.getAttribute("oggettoAnnoPermanente");
		List<OrdineDiAcquistoDettaglio> dettagli = detser.getOrdiniPerSottoCategoria(form.getOsottocategoria().getIdsottocategoria(), oanno.getIdannocontabile());
		
		try {
			this.eseguiRiconciliazione(detser.filterDates(dettagli, form.getDatainizio(), form.getDatafine()));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		model.setViewName("Budget/Riconciliazione");
		model.addObject("messaggio", "Riconciliazione effettuata correttamente");
		return model;
	}

	private void eseguiRiconciliazione(List<OrdineDiAcquistoDettaglio> filterDates) {
		float budgetspeso = 0;
		for (int i = 0; i < filterDates.size(); i++) {
			budgetspeso = budgetspeso + filterDates.get(i).getImporto();
		}
		sotcat.setBudgetspeso(budgetspeso);
		sotser.saveOrUpdate(sotcat);
	}
	
	
}
